apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: edgenodes.edgenode.attest.idlab.be
spec:
  group: edgenode.attest.idlab.be
  names:
    kind: EdgeNode
    listKind: EdgeNodeList
    plural: edgenodes
    singular: edgenode
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EdgeNode is the Schema for the edgenodes API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EdgeNodeSpec defines the desired state of EdgeNode
            properties:
              aik_tpm:
                type: string
              ek_tpm:
                type: string
              ekcert:
                type: string
              ipv4:
                type: string
              mbrefstate:
                type: string
              mtls_cert:
                type: string
              nodeStatus:
                type: string
              nodeport:
                type: integer
              uuid:
                type: string
            required:
            - aik_tpm
            - ek_tpm
            - ekcert
            - ipv4
            - mbrefstate
            - mtls_cert
            - nodeStatus
            - nodeport
            - uuid
            type: object
          status:
            description: EdgeNodeStatus defines the observed state of EdgeNode
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: attestation-operator
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: attestation-operator
    control-plane: controller-manager
  name: attestation-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: edgenodes.edgenode.attest.idlab.be
spec:
  group: edgenode.attest.idlab.be
  names:
    kind: EdgeNode
    listKind: EdgeNodeList
    plural: edgenodes
    singular: edgenode
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EdgeNode is the Schema for the edgenodes API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EdgeNodeSpec defines the desired state of EdgeNode
            properties:
              aik_tpm:
                type: string
              ek_tpm:
                type: string
              ekcert:
                type: string
              ipv4:
                type: string
              mbrefstate:
                type: string
              mtls_cert:
                type: string
              nodeStatus:
                type: string
              nodeport:
                type: integer
              uuid:
                type: string
            required:
            - aik_tpm
            - ek_tpm
            - ekcert
            - ipv4
            - mbrefstate
            - mtls_cert
            - nodeStatus
            - nodeport
            - uuid
            type: object
          status:
            description: EdgeNodeStatus defines the observed state of EdgeNode
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: attestation-operator
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: attestation-operator
  name: attestation-operator-controller-manager
  namespace: attestation-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: attestation-operator
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: attestation-operator
  name: attestation-operator-leader-election-role
  namespace: attestation-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: attestation-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - approve
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kube-apiserver-client
  resources:
  - signers
  verbs:
  - approve
- apiGroups:
  - edgenode.attest.idlab.be
  resources:
  - edgenodes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - edgenode.attest.idlab.be
  resources:
  - edgenodes/finalizers
  verbs:
  - update
- apiGroups:
  - edgenode.attest.idlab.be
  resources:
  - edgenodes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: attestation-operator
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: attestation-operator
  name: attestation-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: attestation-operator
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: attestation-operator
  name: attestation-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: attestation-operator
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: attestation-operator
  name: attestation-operator-leader-election-rolebinding
  namespace: attestation-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: attestation-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: attestation-operator-controller-manager
  namespace: attestation-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: attestation-operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: attestation-operator
  name: attestation-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: attestation-operator-manager-role
subjects:
- kind: ServiceAccount
  name: attestation-operator-controller-manager
  namespace: attestation-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: attestation-operator
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: attestation-operator
  name: attestation-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: attestation-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: attestation-operator-controller-manager
  namespace: attestation-operator-system
---
apiVersion: v1
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJnaXRsYWIuaWxhYnQuaW1lYy5iZTo0NTY3L2VkZ2Uta2V5bGltZS9hdHRlc3RhdGlvbi1vcGVyYXRvciI6IHsKCQkJImF1dGgiOiAiYW5Sb2FXcHpiV0U2VVVjeWMySmFabWRoWVVWcFExWjZabHB0T0ZNPSIKCQl9Cgl9Cn0=
kind: Secret
metadata:
  name: attestation-operator-gitlabtoken
  namespace: attestation-operator-system
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: attestation-operator
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: attestation-operator
    control-plane: controller-manager
  name: attestation-operator-controller-manager-metrics-service
  namespace: attestation-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: attestation-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: attestation-operator
    control-plane: controller-manager
  name: attestation-operator-controller-manager
  namespace: attestation-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: gitlab.ilabt.imec.be:4567/edge-keylime/attestation-operator:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /var/lib/controller/certs/
          name: certs
          readOnly: true
      imagePullSecrets:
      - name: attestation-operator-gitlabtoken
      initContainers:
      - command:
        - /bin/bash
        - -c
        - "KUBECTL_PREFIX=\"\"\ncommand -v kubectl\nif [[ $? -ne 0 ]]\nthen\n    pushd
          /tmp\n    curl -LO https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\n
          \   chmod +x /tmp/kubectl\n    KUBECTL_PREFIX=\"/tmp/\"\n    popd\nfi\n\nls
          -l /var/lib/controller/\n\n# now generate the CV CA\nopenssl req -nodes
          -newkey rsa:2048 -keyout /var/lib/controller/certs/csr.key -out csr.csr
          -subj \"/O=discover.idlab\"\n\nls -l /var/lib/controller/certs/\n\n${KUBECTL_PREFIX}kubectl
          create -f - <<EOF\napiVersion: certificates.k8s.io/v1\nkind: CertificateSigningRequest\nmetadata:\n
          \ name: controller-tls-csr\nspec:\n  request: $(cat csr.csr | base64 | tr
          -d '\\n')\n  signerName: kubernetes.io/kube-apiserver-client\n  usages:\n
          \ - digital signature\n  - key encipherment\n  - client auth\nEOF\n\nrm
          csr.csr\n${KUBECTL_PREFIX}kubectl certificate approve controller-tls-csr\n\n${KUBECTL_PREFIX}kubectl
          get csr controller-tls-csr -o jsonpath='{.status.certificate}' | base64
          --decode > /var/lib/controller/certs/csr.crt\n\n${KUBECTL_PREFIX}kubectl
          delete csr controller-tls-csr\n\nchmod -R 0777 /var/lib/controller/certs/
          \n\nexit 0  \n"
        image: quay.io/keylime/keylime_tenant:latest
        name: cert-init
        volumeMounts:
        - mountPath: /var/lib/controller/certs/
          name: certs
          readOnly: false
        - mountPath: /tmp/
          name: tmp
          readOnly: false
      securityContext:
        runAsNonRoot: false
      serviceAccountName: attestation-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir:
          sizeLimit: 500Mi
        name: certs
      - emptyDir:
          sizeLimit: 500Mi
        name: tmp
