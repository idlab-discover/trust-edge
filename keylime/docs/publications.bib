@inproceedings{berbecaruCounteractingSoftwareIntegrity2022,
  title = {Counteracting Software Integrity Attacks on {{IoT}} Devices with Remote Attestation: A Prototype},
  shorttitle = {Counteracting Software Integrity Attacks on {{IoT}} Devices with Remote Attestation},
  booktitle = {2022 26th {{International Conference}} on {{System Theory}}, {{Control}} and {{Computing}} ({{ICSTCC}})},
  author = {Berbecaru, Diana Gratiela and Sisinni, Silvia},
  year = {2022},
  month = oct,
  date = {2022-10},
  pages = {380--385},
  issn = {2372-1618},
  doi = {10.1109/ICSTCC55426.2022.9931765},
  url = {https://ieeexplore.ieee.org/document/9931765},
  urldate = {2023-12-02},
  abstract = {Internet of Things (IoT) devices are increasingly deployed nowadays in various security-sensitive contexts, e.g., inside homes or in critical infrastructures. The data they collect is of interest to attackers as it may reveal living habits, personal data, or the operational status of specific targets. This paper presents an approach to counter software manipulation attacks against running processes, data, or configuration files on an IoT device, by exploiting trusted computing techniques and remote attestation. We have used a Raspberry Pi 4 single-board computer device equipped with Infineon Trusted Platform Module (TPM) v2, acting as an attester. A verifier node continuously monitors the attester and checks its integrity through remote attestation protocol and TPM-enabled operations. We have exploited the Keylime framework from MIT Lincoln Laboratories as remote attestation software. Through tests, we show that remote attestation can be performed within short time (in order of seconds), allowing to restrict the window of exposure of such devices to attacks against the running software and/or hosted data.},
  eventtitle = {2022 26th {{International Conference}} on {{System Theory}}, {{Control}} and {{Computing}} ({{ICSTCC}})},
}

@online{buonoExtendingServerIntegrity2022,
  title = {Extending Server Integrity with {{Durable Attestation}}},
  author = {Buono, Daniele and Silva, Marcio A. and Drocco, Maurizio and Almasi, Gheorghe and Bottomley, James},
  date = {2022-11-14},
  url = {https://research.ibm.com/blog/durable-attestation-cloud-security},
  urldate = {2023-12-02},
  abstract = {Si},
  organization = {{IBM Research Blog}},
}

@online{foyKeylimeSecuritySoftware2021,
  title = {Keylime Security Software Is Deployed to {{IBM}} Cloud},
  author = {Foy, Kylie},
  date = {2021-07-27},
  url = {https://news.mit.edu/2021/keylime-security-software-deployed-ibm-cloud-0727},
  urldate = {2023-12-02},
  abstract = {Keylime, an open-source cybersecurity software developed at MIT Lincoln Laboratory, is being adopted by IBM to secure its sensitive cloud data.},
  langid = {english},
  organization = {{MIT News | Massachusetts Institute of Technology}},
}

@unpublished{hindsKeylimeBootstrappingMaintaining2020,
  title = {Keylime: {{Bootstrapping}} and {{Maintaining Trust}}},
  shorttitle = {Keylime},
  author = {Hinds, Luke},
  date = {2020-03-30},
  url = {https://www.youtube.com/watch?v=xPmv-G5V4I8},
  urldate = {2023-12-02},
  abstract = {Keylime (keylime.dev) is a young, rapidly growing open source project originally created in the security research department of MIT's Lincoln Laboratory. It provides a way of measuring the cryptographic trust state of machines using a Trusted Platform Module (TPM). Keylime is about making TPM technology accessible for developers and users. It allows users to easily delivery secrets to a node based on a hardware root of trust.},
  eventtitle = {{{DevConf}}.{{CZ}} 2020},
  note = {}
}

@unpublished{hindsKeylimeDemoRemote2020,
  title = {Keylime {{Demo}}: {{Remote Trust}} for {{IoT}}, Edge, and Cloud},
  shorttitle = {Keylime Demo},
  author = {Hinds, Luke},
  date = {2020-01-06},
  url = {https://www.youtube.com/watch?v=Qhr_aVBCZPw},
  urldate = {2023-12-02},
  abstract = {This video from Luke Hinds demonstrates Keylime measuring the trust state of three etcd nodes as part of a cluster and delivering an encrypted payload. One of the etcd nodes is then compromised, which causes Keylime to remove the compromised machine from the etcd cluster.},
  note = {}
}

@unpublished{hindsKeylimeOpenSource2019,
  title = {Keylime - {{An Open Source TPM Project}} for {{Remote Trust}}.},
  author = {Hinds, Luke},
  date = {2019-11-13},
  url = {https://www.youtube.com/watch?v=YtPsruEqGeY},
  urldate = {2023-12-02},
  abstract = {Keylime (keylime.dev) is a young, rapidly growing open source project originally created in the security research department of MIT's Lincoln Laboratory. It provides a way of measuring the cryptographic hardware root of trust of machines hosting an Trusted Platform Module (TPM) chip. Keylime is about making TPM technology accessible for developers and users. It handles the complexity, you drive the use case!},
  note = {}
}

@unpublished{hindsKeylimeOpenSource2020,
  title = {Keylime - {{An Open Source TPM Project}} for {{Remote Trust}} of {{IoT}}},
  author = {Hinds, Luke},
  date = {2020-05-06},
  url = {https://www.youtube.com/watch?v=jtbWnod5hoY},
  urldate = {2023-12-02},
  abstract = {Keylime (keylime.dev) is a young, rapidly growing open source project originally created in the security research department of MIT's Lincoln Laboratory. It provides a way of measuring the cryptographic hardware root of trust of devices hosting an Trusted Platform Module (TPM) chip. Keylime is about making TPM technology accessible for developers and users. It handles the complexity, you drive the use case!},
  note = {}
}

@article{lioyTPM0basedAttestation,
  title = {{{TPM}} 2.0-Based {{Attestation}} of a {{Kubernetes Cluster}}},
  author = {Lioy, Antonio and Pedone, Dr Ignazio and Sisinni, Dr Silvia},
  langid = {english},
  year = {2023},
  journal = {Politecnico di Torino}
}

@article{mosayyebzadehSecureCloudMinimal,
  title = {A {{Secure Cloud}} with {{Minimal Provider Trust}}},
  author = {Mosayyebzadeh, Amin and Ravago, Gerardo and Mohan, Apoorve and Raza, Ali and Tikale, Sahil and Schear, Nabil and Hudson, Trammell and Hennessey, Jason and Ansari, Naved and Hogan, Kyle and Munson, Charles and Rudolph, Larry and Cooperman, Gene and Desnoyers, Peter and Krieger, Orran},
  abstract = {Bolted is a new architecture for a bare metal cloud with the goal of providing security-sensitive customers of a cloud the same level of security and control that they can obtain in their own private data centers. It allows tenants to elastically allocate secure resources within a cloud while being protected from other previous, current, and future tenants of the cloud. The provisioning of a new server to a tenant isolates a bare metal server, only allowing it to communicate with other tenant’s servers once its critical firmware and software have been attested to the tenant. Tenants, rather than the provider, control the tradeoffs between security, price, and performance. A prototype demonstrates scalable end-to-end security with small overhead compared to a less secure alternative.},
  langid = {english},
  year = {2018},
  journal = {10th USENIX Workshop on Hot Topics in Cloud Computing (HotCloud 18)},
  month = jul
}

@online{narayananRemoteAttestationSEVSNP2023,
  title = {Remote Attestation of {{SEV-SNP}} Confidential {{VMs}} Using e-{{vTPMs}}},
  author = {Narayanan, Vikram and Carvalho, Claudio and Ruocco, Angelo and Almási, Gheorghe and Bottomley, James and Ye, Mengmei and Feldman-Fitzthum, Tobin and Buono, Daniele and Franke, Hubertus and Burtsev, Anton},
  date = {2023-06-25},
  eprint = {2303.16463},
  eprinttype = {arxiv},
  eprintclass = {cs},
  doi = {10.48550/arXiv.2303.16463},
  url = {http://arxiv.org/abs/2303.16463},
  urldate = {2023-12-02},
  abstract = {Trying to address the security challenges of a cloud-centric software deployment paradigm, silicon and cloud vendors are introducing confidential computing - an umbrella term aimed at providing hardware and software mechanisms for protecting cloud workloads from the cloud provider and its software stack. Today, Intel SGX, AMD SEV, Intel TDX, etc., provide a way to shield cloud applications from the cloud provider through encryption of the application's memory below the hardware boundary of the CPU, hence requiring trust only in the CPU vendor. Unfortunately, existing hardware mechanisms do not automatically enable the guarantee that a protected system was not tampered with during configuration and boot time. Such a guarantee relies on a hardware RoT, i.e., an integrity-protected location that can store measurements in a trustworthy manner, extend them, and authenticate the measurement logs to the user. In this work, we design and implement a virtual TPM that virtualizes the hardware RoT without requiring trust in the cloud provider. To ensure the security of a vTPM in a provider-controlled environment, we leverage unique isolation properties of the SEV-SNP hardware that allows us to execute secure services as part of the enclave environment protected from the cloud provider. We further develop a novel approach to vTPM state management where the vTPM state is not preserved across reboots. Specifically, we develop a stateless ephemeral vTPM that supports remote attestation without any persistent state on the host. This allows us to pair each confidential VM with a private instance of a vTPM completely isolated from the provider-controlled environment and other VMs. We built our prototype entirely on open-source components. Though our work is AMD-specific, a similar approach could be used to build remote attestation protocols on other trusted execution environments.},
  pubstate = {preprint},
  keywords = {Computer Science - Cryptography and Security,Computer Science - Operating Systems},
  
}

@online{petersIBMImplementsRemote2021,
  title = {{{IBM}} Implements Remote Attestation on {{Linux}} with a Hardware Root-of-Trust Using {{Keylime}}},
  author = {Peters, Michael and Almasi, Gheorghe},
  date = {2021-07-06T15:00+00:00},
  url = {https://www.cncf.io/blog/2021/07/06/ibm-implements-remote-attestation-on-linux-with-a-hardware-root-of-trust-using-keylime/},
  urldate = {2023-12-02},
  langid = {american},
  organization = {{CNCF}},
  
}

@online{petersKeylimeDurableAttestation2023,
  title = {Keylime’s Durable Attestation Makes Security Auditable},
  author = {Peters, Michael and Silva, Marcio A. and Almási, George and Bottomley, James and Sturmann, Lily},
  date = {2023-04-25T17:33:39+00:00},
  url = {https://next.redhat.com/2023/04/25/keylimes-durable-attestation-makes-security-auditable/},
  urldate = {2023-12-02},
  abstract = {Remote attestation answers the (slightly paraphrased) question: “It’s 3pm, do you know what the systems in your data center are doing?” Going with this premise, durable attestation answers a similar question about 3pm yesterday. In this article we describe the concepts of remote attestation and durable attestation, as well as an implementation in the context […]},
  langid = {american},
  organization = {{Red Hat Emerging Technologies}},
  
}

@unpublished{planasMicroOSRemoteAttestation2021,
  title = {{{MicroOS Remote Attestation}} with {{TPM}} and {{Keylime}}},
  author = {Planas, Alberto},
  date = {2021-11-02},
  url = {https://www.youtube.com/watch?v=6F2mxG4YRKg},
  urldate = {2023-12-02},
  abstract = {The Trusted Computing Group (TCG)[1] is defining via specifications the different technology pieces that compose what is named Trusted Computing (TC)[2], that in an effort to guarantee that the computers behave under certain restrictions, and protect the system against unauthorized changes. This is achieved via the Trusted Platform Module (TPM) co-processor, that can be used as an independent agent that can certify its internal state and that it can only be changed in very specific ways. With a TPM we can now do measurements in our computer, and change the internal state of the TPM accordingly. An external service can request the current state of the TPM and validate that the measurements done previously were not tampered in any way. This remote agent can compare those measurements with some expected values and validate the status of the system at this point. This full process is known as remote attestation. Keylime[3] is an open source project designed to do remote boot attestation and runtime integrity (via IMA measurements done by the kernel) that has been recently integrated in MicroOS[4]. This presentation will present concepts like TPM, measure boot and remote attestation in the context of Keylime and MicroOS. If the starts are favorable there will be a demonstration that will show how a change in the system will be detected remotely, and an action will be triggered designed to isolate the tampered system. -- [1] https://trustedcomputinggroup.org/about [2] https://trustedcomputinggroup.org/tru... [3] https://keylime.dev/ [4] https://en.opensuse.org/Portal:MicroO... Speaker: Alberto Planas Dominguez},
  note = {}
}

@online{planasMicroOSRemoteAttestation2021a,
  title = {{{MicroOS Remote Attestation}} with {{TPM}} and {{Keylime}}},
  author = {Planas, Alberto},
  date = {2021-11-08T12:20:00+00:00},
  url = {https://microos.opensuse.org/blog/2021-11-08-MicroOS-Keylime-TPM/},
  urldate = {2023-12-02},
  langid = {english},
  organization = {{openSUSE MicroOS}},
  note = {}
}

@unpublished{planasRemoteAttestationMicroOS0200,
  title = {Remote {{Attestation}} in {{MicroOS}}},
  author = {Planas, Alberto},
  year = {00:00:00 +0200},
  url = {https://media.ccc.de/v/3710-remote-attestation-in-microos},
  urldate = {2023-12-02},
  abstract = {Recently MicroOS can be installed with remote attestation, using the TPM as a root of trust and Keylime as a service to report and verify...},
  eventtitle = {{{openSUSE Conference}} 2022},
  langid = {english},
  venue = {{2022-06-02}},
  note = {}
}

@unpublished{sasakiRemoteAttestationKeylime2023,
  title = {Remote {{Attestation}} with {{Keylime}}},
  author = {Sasaki, Anderson and Sommer, Thore},
  date = {2023-02-04},
  url = {https://archive.fosdem.org/2023/schedule/event/security_keylime/},
  urldate = {2023-12-02},
  abstract = {In various scenarios, it is necessary to attest the integrity of a remote machine, making sure that the system was booted securely, essential files were not modified and that only allowed software is executed. For this purpose, we present Keylime as a remote attestation solution. It leverages the trust from the Trusted Platform Module (TPM) in combination with UEFI Measured Boot and the Linux Kernel Integrity Measurement Architecture (IMA) which are probably available on your system today. We will present how Keylime works and real world applications for remote attestation.},
  eventtitle = {{{FOSDEM}} 2023},
  langid = {english},
  note = {}
}

@inproceedings{schearBootstrappingMaintainingTrust2016b,
  title = {Bootstrapping and Maintaining Trust in the Cloud},
  booktitle = {Proceedings of the 32nd {{Annual Conference}} on {{Computer Security Applications}}},
  author = {Schear, Nabil and Cable, Patrick T. and Moyer, Thomas M. and Richard, Bryan and Rudd, Robert},
  year = {2016},
  month = dec,
  day = {5},
  date = {2016-12-05},
  pages = {65--77},
  publisher = {{ACM}},
  location = {{Los Angeles California USA}},
  doi = {10.1145/2991079.2991104},
  url = {https://dl.acm.org/doi/10.1145/2991079.2991104},
  urldate = {2023-12-02},
  eventtitle = {{{ACSAC}} '16: 2016 {{Annual Computer Security Applications Conference}}},
  isbn = {978-1-4503-4771-6},
  langid = {english},
  
}

@article{sisinniIntegrityVerificationDistributed2022,
  title = {Integrity {{Verification}} of {{Distributed Nodes}} in {{Critical Infrastructures}}},
  author = {Sisinni, Silvia and Margaria, Davide and Pedone, Ignazio and Lioy, Antonio and Vesco, Andrea},
  year = {2022},
  month = sep,
  date = {2022-09-14},
  journal = {Sensors 2022},
  shortjournal = {Sensors},
  volume = {22},
  number = {18},
  pages = {6950},
  issn = {1424-8220},
  doi = {10.3390/s22186950},
  url = {https://www.mdpi.com/1424-8220/22/18/6950},
  urldate = {2023-12-02},
  abstract = {The accuracy and reliability of time synchronization and distribution are essential requirements for many critical infrastructures, including telecommunication networks, where 5G technologies place increasingly stringent conditions in terms of maintaining highly accurate time. A lack of synchronization between the clocks causes a malfunction of the 5G network, preventing it from providing a high quality of service; this makes the time distribution network a very viable target for attacks. Various solutions have been analyzed to mitigate attacks on the Global Navigation Satellite System (GNSS) radio-frequency spectrum and the Precision Time Protocol (PTP) used for time distribution over the network. This paper highlights the significance of monitoring the integrity of the software and configurations of the infrastructural nodes of a time distribution network. Moreover, this work proposes an attestation scheme, based on the Trusted Computing principles, capable of detecting both software violations on the nodes and hardware attacks aimed at tampering with the configuration of the GNSS receivers. The proposed solution has been implemented and validated on a testbed representing a typical synchronization distribution network. The results, simulating various types of adversaries, emphasize the effectiveness of the proposed approach in a wide range of typical attacks and the certain limitations that need to be addressed to enhance the security of the current GNSS receivers.},
  langid = {english},
  
}

@unpublished{sommerRemoteAttestationUEFI2022,
  title = {Remote {{Attestation}} of the {{UEFI Event}} Log},
  author = {Sommer, Thore},
  date = {2022-11-13T09:23:26-05:00},
  url = {https://vimeo.com/770419457},
  urldate = {2023-12-02},
  abstract = {Thore Sommer, maintainer of Keylime, explains how to make use of the UEFI Event log and goes in depth to demystify each UEFI Event. Watch the video to learn more\&hellip;},
  eventtitle = {{{TPMdev}} 2022 {{Conf}}},
  note = {}
}

@unpublished{sommerWritingDigitalExams2023,
  title = {Writing {{Digital Exams}} Secured by {{Remote Attestation}} and {{Cloud Computing}}},
  author = {Sommer, Thore},
  date = {2023-07-14},
  url = {https://www.youtube.com/watch?v=EXaPg2Yji4s},
  urldate = {2023-12-02},
  abstract = {Speaker: Thore Sommer Keylime Maintainer, FHNW Digital exams in schools and universities are getting more and more common. This talk we take a closer look at how we, the University of Applied Sciences and Arts Northwestern Switzerland (FHNW), solved many of the related challenges with Trusted Platform Module (TPM) based remote attestation and cloud computing. During this we discuss the solutions that we found and challenges we faced to implement it in our exam system the Cloud Assessment Management Platform (CAMPLA).},
  eventtitle = {Confidential {{Computing Summit}} 2023},
  note = {}
}

@unpublished{sturmannKeylimeBootstrapMaintain2022,
  title = {Keylime: {{Bootstrap}} and {{Maintain Trust}} on the {{Edge}}, {{Cloud}}, and {{IoT}}},
  shorttitle = {Keylime},
  author = {Sturmann, Lily and Peters, Michael},
  date = {2022-07-30},
  url = {https://www.youtube.com/watch?v=e_g32LxvOCk},
  urldate = {2023-12-02},
  abstract = {Keylime: Bootstrap and Maintain Trust on the Edge, Cloud, and IoT - Lily Sturmann \& Michael Peters, Red Hat},
  note = {}
}

@unpublished{tothKeylimeSecuringYour2019,
  title = {Keylime, {{Securing}} Your {{Slice}} of the {{Cloud}}.},
  author = {Toth, Andrew},
  date = {2019-10-02},
  url = {https://www.youtube.com/watch?v=O2x9gwq3BQQ},
  urldate = {2023-12-02},
  abstract = {Keylime, Securing your Slice of the Cloud. - Andrew Toth, Red Hat Keylime is a scalable cloud trust attestation management system. Keylime provides both bootstrapping of hardware rooted cryptographic identities for IaaS nodes and for system integrity monitoring of those nodes via periodic attestation, using Trusted Platform Module (TPM) technology.Keylime was originated by the security research team at MIT's Lincoln Laboratory and has since grown into opensource community concentrating on securing untrusted remote infrastructures.We will discuss the what, why, and how of keylime and TPM followed by a demo of the technology.},
  note = {}
}

@online{uiterwijkTPM2KeyTrust2021,
  title = {{{TPM2 Key Trust}}: Where Did {{Keylime}} Go Wrong},
  shorttitle = {{{TPM2 Key Trust}}},
  author = {Uiterwijk, Patrick},
  date = {2021-02-24T13:20:00+00:00},
  url = {https://puiterwijk.org/posts/tpm2-attestation-keylime-vulnerability/},
  urldate = {2023-12-02},
  abstract = {In my previous blog post , I explained how a verifier can get a signing key that it trusts is on a TPM for attestation (part 2 of the other post in the making). I have been contributing to a specific implementation of remote attestation for Linux, called Keylime . As part of the effort on porting the agent to Rust, I was looking into how the process works, and as part of that I identified a vulnerability in how Keylime deals with the TPM2 that breaks the Chain of Trust in two different places.},
  langid = {english},
  organization = {{Patrick Uiterwijk}},
  note = {}
}

@online{underwoodKeylimeProvidesRootofTrust2021,
  title = {Keylime {{Provides Root-of-Trust}} at {{Scale}}},
  author = {Underwood, Kimberly},
  date = {2021-12-01},
  url = {https://www.afcea.org/signal-media/keylime-provides-root-trust-scale},
  urldate = {2023-12-02},
  abstract = {The firmware zero-trust architecture is ready for prime-time, cloud-based deployment.},
  langid = {english},
  organization = {{AFCEA International}},
  note = {}
}
